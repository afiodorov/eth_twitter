// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewTweet extends ethereum.Event {
  get params(): NewTweet__Params {
    return new NewTweet__Params(this);
  }
}

export class NewTweet__Params {
  _event: NewTweet;

  constructor(event: NewTweet) {
    this._event = event;
  }

  get pk(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get text(): string {
    return this._event.parameters[2].value.toString();
  }

  get displayName(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get hashtag(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get retweetOf(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get isReplyRetweet(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }
}

export class NewReply extends ethereum.Event {
  get params(): NewReply__Params {
    return new NewReply__Params(this);
  }
}

export class NewReply__Params {
  _event: NewReply;

  constructor(event: NewReply) {
    this._event = event;
  }

  get pk(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get text(): string {
    return this._event.parameters[2].value.toString();
  }

  get displayName(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get tweet(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get seq_num(): i32 {
    return this._event.parameters[5].value.toI32();
  }
}

export class NewLike extends ethereum.Event {
  get params(): NewLike__Params {
    return new NewLike__Params(this);
  }
}

export class NewLike__Params {
  _event: NewLike;

  constructor(event: NewLike) {
    this._event = event;
  }

  get pk(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewReplyLike extends ethereum.Event {
  get params(): NewReplyLike__Params {
    return new NewReplyLike__Params(this);
  }
}

export class NewReplyLike__Params {
  _event: NewReplyLike;

  constructor(event: NewReplyLike) {
    this._event = event;
  }

  get pk(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Thoughtful__tweetsResultValue0Struct extends ethereum.Tuple {
  get pk(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Address {
    return this[1].toAddress();
  }

  get text(): string {
    return this[2].toString();
  }

  get displayName(): string {
    return this[3].toString();
  }

  get hashtag(): string {
    return this[4].toString();
  }

  get likes(): BigInt {
    return this[5].toBigInt();
  }

  get retweets(): BigInt {
    return this[6].toBigInt();
  }

  get retweetOf(): BigInt {
    return this[7].toBigInt();
  }

  get isReplyRetweet(): boolean {
    return this[8].toBoolean();
  }
}

export class Thoughtful__repliesResultValue0Struct extends ethereum.Tuple {
  get pk(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Address {
    return this[1].toAddress();
  }

  get text(): string {
    return this[2].toString();
  }

  get displayName(): string {
    return this[3].toString();
  }

  get tweet(): BigInt {
    return this[4].toBigInt();
  }

  get seq_num(): i32 {
    return this[5].toI32();
  }

  get likes(): BigInt {
    return this[6].toBigInt();
  }

  get retweets(): BigInt {
    return this[7].toBigInt();
  }
}

export class Thoughtful extends ethereum.SmartContract {
  static bind(address: Address): Thoughtful {
    return new Thoughtful("Thoughtful", address);
  }

  tweet(text: string, displayName: string, hashtag: string): BigInt {
    let result = super.call("tweet", "tweet(string,string,string):(uint128)", [
      ethereum.Value.fromString(text),
      ethereum.Value.fromString(displayName),
      ethereum.Value.fromString(hashtag)
    ]);

    return result[0].toBigInt();
  }

  try_tweet(
    text: string,
    displayName: string,
    hashtag: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tweet",
      "tweet(string,string,string):(uint128)",
      [
        ethereum.Value.fromString(text),
        ethereum.Value.fromString(displayName),
        ethereum.Value.fromString(hashtag)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  retweet(pk: BigInt, text: string, displayName: string): BigInt {
    let result = super.call(
      "retweet",
      "retweet(uint128,string,string):(uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(pk),
        ethereum.Value.fromString(text),
        ethereum.Value.fromString(displayName)
      ]
    );

    return result[0].toBigInt();
  }

  try_retweet(
    pk: BigInt,
    text: string,
    displayName: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "retweet",
      "retweet(uint128,string,string):(uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(pk),
        ethereum.Value.fromString(text),
        ethereum.Value.fromString(displayName)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  retweet_reply(pk: BigInt, text: string, displayName: string): BigInt {
    let result = super.call(
      "retweet_reply",
      "retweet_reply(uint128,string,string):(uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(pk),
        ethereum.Value.fromString(text),
        ethereum.Value.fromString(displayName)
      ]
    );

    return result[0].toBigInt();
  }

  try_retweet_reply(
    pk: BigInt,
    text: string,
    displayName: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "retweet_reply",
      "retweet_reply(uint128,string,string):(uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(pk),
        ethereum.Value.fromString(text),
        ethereum.Value.fromString(displayName)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  reply(
    text: string,
    displayName: string,
    tweet: BigInt,
    seq_num: i32
  ): BigInt {
    let result = super.call(
      "reply",
      "reply(string,string,uint128,uint16):(uint128)",
      [
        ethereum.Value.fromString(text),
        ethereum.Value.fromString(displayName),
        ethereum.Value.fromUnsignedBigInt(tweet),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(seq_num))
      ]
    );

    return result[0].toBigInt();
  }

  try_reply(
    text: string,
    displayName: string,
    tweet: BigInt,
    seq_num: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reply",
      "reply(string,string,uint128,uint16):(uint128)",
      [
        ethereum.Value.fromString(text),
        ethereum.Value.fromString(displayName),
        ethereum.Value.fromUnsignedBigInt(tweet),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(seq_num))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  num_tweets(): BigInt {
    let result = super.call("num_tweets", "num_tweets():(uint128)", []);

    return result[0].toBigInt();
  }

  try_num_tweets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("num_tweets", "num_tweets():(uint128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tweets(arg0: BigInt): Thoughtful__tweetsResultValue0Struct {
    let result = super.call(
      "tweets",
      "tweets(uint128):((uint128,address,string,string,string,uint32,uint32,uint128,bool))",
      [ethereum.Value.fromUnsignedBigInt(arg0)]
    );

    return changetype<Thoughtful__tweetsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_tweets(
    arg0: BigInt
  ): ethereum.CallResult<Thoughtful__tweetsResultValue0Struct> {
    let result = super.tryCall(
      "tweets",
      "tweets(uint128):((uint128,address,string,string,string,uint32,uint32,uint128,bool))",
      [ethereum.Value.fromUnsignedBigInt(arg0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Thoughtful__tweetsResultValue0Struct>(value[0].toTuple())
    );
  }

  num_tweets_per_sender(arg0: Address): BigInt {
    let result = super.call(
      "num_tweets_per_sender",
      "num_tweets_per_sender(address):(uint64)",
      [ethereum.Value.fromAddress(arg0)]
    );

    return result[0].toBigInt();
  }

  try_num_tweets_per_sender(arg0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "num_tweets_per_sender",
      "num_tweets_per_sender(address):(uint64)",
      [ethereum.Value.fromAddress(arg0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tweets_per_sender(arg0: Address, arg1: BigInt): BigInt {
    let result = super.call(
      "tweets_per_sender",
      "tweets_per_sender(address,uint64):(uint128)",
      [
        ethereum.Value.fromAddress(arg0),
        ethereum.Value.fromUnsignedBigInt(arg1)
      ]
    );

    return result[0].toBigInt();
  }

  try_tweets_per_sender(
    arg0: Address,
    arg1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tweets_per_sender",
      "tweets_per_sender(address,uint64):(uint128)",
      [
        ethereum.Value.fromAddress(arg0),
        ethereum.Value.fromUnsignedBigInt(arg1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  num_tweets_per_hashtag(arg0: string): BigInt {
    let result = super.call(
      "num_tweets_per_hashtag",
      "num_tweets_per_hashtag(string):(uint64)",
      [ethereum.Value.fromString(arg0)]
    );

    return result[0].toBigInt();
  }

  try_num_tweets_per_hashtag(arg0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "num_tweets_per_hashtag",
      "num_tweets_per_hashtag(string):(uint64)",
      [ethereum.Value.fromString(arg0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tweets_per_hashtag(arg0: string, arg1: BigInt): BigInt {
    let result = super.call(
      "tweets_per_hashtag",
      "tweets_per_hashtag(string,uint64):(uint128)",
      [ethereum.Value.fromString(arg0), ethereum.Value.fromUnsignedBigInt(arg1)]
    );

    return result[0].toBigInt();
  }

  try_tweets_per_hashtag(
    arg0: string,
    arg1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tweets_per_hashtag",
      "tweets_per_hashtag(string,uint64):(uint128)",
      [ethereum.Value.fromString(arg0), ethereum.Value.fromUnsignedBigInt(arg1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  num_replies(): BigInt {
    let result = super.call("num_replies", "num_replies():(uint128)", []);

    return result[0].toBigInt();
  }

  try_num_replies(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("num_replies", "num_replies():(uint128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  replies(arg0: BigInt): Thoughtful__repliesResultValue0Struct {
    let result = super.call(
      "replies",
      "replies(uint128):((uint128,address,string,string,uint128,uint16,uint32,uint32))",
      [ethereum.Value.fromUnsignedBigInt(arg0)]
    );

    return changetype<Thoughtful__repliesResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_replies(
    arg0: BigInt
  ): ethereum.CallResult<Thoughtful__repliesResultValue0Struct> {
    let result = super.tryCall(
      "replies",
      "replies(uint128):((uint128,address,string,string,uint128,uint16,uint32,uint32))",
      [ethereum.Value.fromUnsignedBigInt(arg0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Thoughtful__repliesResultValue0Struct>(value[0].toTuple())
    );
  }

  num_replies_per_tweet(arg0: BigInt): i32 {
    let result = super.call(
      "num_replies_per_tweet",
      "num_replies_per_tweet(uint128):(uint16)",
      [ethereum.Value.fromUnsignedBigInt(arg0)]
    );

    return result[0].toI32();
  }

  try_num_replies_per_tweet(arg0: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "num_replies_per_tweet",
      "num_replies_per_tweet(uint128):(uint16)",
      [ethereum.Value.fromUnsignedBigInt(arg0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  replies_per_tweet(arg0: BigInt, arg1: i32): BigInt {
    let result = super.call(
      "replies_per_tweet",
      "replies_per_tweet(uint128,uint16):(uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(arg0),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(arg1))
      ]
    );

    return result[0].toBigInt();
  }

  try_replies_per_tweet(arg0: BigInt, arg1: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "replies_per_tweet",
      "replies_per_tweet(uint128,uint16):(uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(arg0),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(arg1))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class TweetCall extends ethereum.Call {
  get inputs(): TweetCall__Inputs {
    return new TweetCall__Inputs(this);
  }

  get outputs(): TweetCall__Outputs {
    return new TweetCall__Outputs(this);
  }
}

export class TweetCall__Inputs {
  _call: TweetCall;

  constructor(call: TweetCall) {
    this._call = call;
  }

  get text(): string {
    return this._call.inputValues[0].value.toString();
  }

  get displayName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get hashtag(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class TweetCall__Outputs {
  _call: TweetCall;

  constructor(call: TweetCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RetweetCall extends ethereum.Call {
  get inputs(): RetweetCall__Inputs {
    return new RetweetCall__Inputs(this);
  }

  get outputs(): RetweetCall__Outputs {
    return new RetweetCall__Outputs(this);
  }
}

export class RetweetCall__Inputs {
  _call: RetweetCall;

  constructor(call: RetweetCall) {
    this._call = call;
  }

  get pk(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get text(): string {
    return this._call.inputValues[1].value.toString();
  }

  get displayName(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RetweetCall__Outputs {
  _call: RetweetCall;

  constructor(call: RetweetCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Retweet_replyCall extends ethereum.Call {
  get inputs(): Retweet_replyCall__Inputs {
    return new Retweet_replyCall__Inputs(this);
  }

  get outputs(): Retweet_replyCall__Outputs {
    return new Retweet_replyCall__Outputs(this);
  }
}

export class Retweet_replyCall__Inputs {
  _call: Retweet_replyCall;

  constructor(call: Retweet_replyCall) {
    this._call = call;
  }

  get pk(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get text(): string {
    return this._call.inputValues[1].value.toString();
  }

  get displayName(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class Retweet_replyCall__Outputs {
  _call: Retweet_replyCall;

  constructor(call: Retweet_replyCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ReplyCall extends ethereum.Call {
  get inputs(): ReplyCall__Inputs {
    return new ReplyCall__Inputs(this);
  }

  get outputs(): ReplyCall__Outputs {
    return new ReplyCall__Outputs(this);
  }
}

export class ReplyCall__Inputs {
  _call: ReplyCall;

  constructor(call: ReplyCall) {
    this._call = call;
  }

  get text(): string {
    return this._call.inputValues[0].value.toString();
  }

  get displayName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get tweet(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get seq_num(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class ReplyCall__Outputs {
  _call: ReplyCall;

  constructor(call: ReplyCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class LikeCall extends ethereum.Call {
  get inputs(): LikeCall__Inputs {
    return new LikeCall__Inputs(this);
  }

  get outputs(): LikeCall__Outputs {
    return new LikeCall__Outputs(this);
  }
}

export class LikeCall__Inputs {
  _call: LikeCall;

  constructor(call: LikeCall) {
    this._call = call;
  }

  get pk(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LikeCall__Outputs {
  _call: LikeCall;

  constructor(call: LikeCall) {
    this._call = call;
  }
}

export class Like_replyCall extends ethereum.Call {
  get inputs(): Like_replyCall__Inputs {
    return new Like_replyCall__Inputs(this);
  }

  get outputs(): Like_replyCall__Outputs {
    return new Like_replyCall__Outputs(this);
  }
}

export class Like_replyCall__Inputs {
  _call: Like_replyCall;

  constructor(call: Like_replyCall) {
    this._call = call;
  }

  get pk(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class Like_replyCall__Outputs {
  _call: Like_replyCall;

  constructor(call: Like_replyCall) {
    this._call = call;
  }
}
